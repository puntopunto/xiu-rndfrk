# syntax=docker/dockerfile:1
# escape=\

# XIU stream/restream server
# Test image

# ---

# Glob build args
ARG BASE_VERSION="latest"
ARG RUN_VERSION="latest"
ARG TARGET_PLATFORM="linux/amd64"

# ---

# 1. Base image
FROM --platform=${TARGET_PLATFORM} alpine:${BASE_VERSION} AS builder

# Builder args
# Deps
ARG BUILD_DEPS="openssl-dev libgcc"
ARG TOOLCHAIN="pkgconf git rust cargo"

# App source
ARG SRC_URL="https://github.com/harlanc/xiu.git"
ARG SRC_BRANCH="master"

# Directory/file settings
ARG BUILD_DIR="build"
ARG TARGET_DIR="app"
ARG MANIFEST="xiu/application/xiu/Cargo.toml"
ARG COMPILED_APP="xiu/target/release/xiu"

# Set workdir
WORKDIR ${BUILD_DIR}

# Get toolchain
RUN apk --update-cache upgrade --upgrade-cache; \
    apk add --no-cache ${BUILD_DEPS} ${TOOLCHAIN}; \
    apk cache clean;

# Copying source and building
RUN git clone ${SRC_URL} --branch ${SRC_BRANCH};
RUN cargo build --manifest-path ${MANIFEST} --release;
RUN mkdir ${TARGET_DIR} && mv ${COMPILED_APP} ${TARGET_DIR};

# ---

# 2. Runner
FROM alpine:${RUN_VERSION} AS runner

# Runner build args
# Base deps
ARG RUN_DEPS="libgcc"

# Dirs
ARG BUILDER_APP_DIR="/build/app"
ARG APP_DIR="/app"

# User creation
ARG UID=10001
ARG USERNAME="appuser"
ARG HOME="/nonexistent"
ARG SHELL="/sbin/nologin"
ARG GECOS="Specified user"

# Port/proto aliases
ARG RTMP="1935"
ARG XIU_HTTP="8000"

# Set workdir
WORKDIR ${APP_DIR}

# Install deps and create app user
RUN apk --update-cache upgrade --upgrade-cache; \
    apk add --no-cache ${RUN_DEPS}; \
    apk cache clean; \
    adduser \
    --gecos ${GECOS} \
    --shell ${SHELL} \
    --home ${HOME} \
    --no-create-home \
    --disabled-password \
    --uid ${UID} \
    ${USERNAME};

# Switching user
USER ${USERNAME}

# Copying app
COPY --from=builder ${BUILDER_APP_DIR} ${APP_DIR}

# Exposing all interesting ports
EXPOSE ${RTMP}
EXPOSE ${XIU_HTTP}

# Launch
ENTRYPOINT [ "xiu" ]
